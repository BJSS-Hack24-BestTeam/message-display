{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/services/websocket.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 159;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 159\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 204;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 204\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { WebsocketService } from '../../services/websocket';\nimport { Subscriber } from 'rxjs';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  globalMessages: string[] = [];\n\n  constructor(public navCtrl: NavController) {\n    const url = \"ws://51.143.186.87:8889/ws\";\n    let blah: Subscriber<any> = new Subscriber();\n\n    const ws = new WebsocketService();\n    ws.createObservableSocket(url, blah).subscribe(\n      (message) => this.globalMessages.push(message));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {Injectable} from '@angular/core';\nimport {Observable, Subscriber} from 'rxjs/Rx';\n\n@Injectable()\nexport class WebsocketService {\n  private ws: WebSocket;\n\n  createObservableSocket(url: string, openSubscriber: Subscriber<any>): Observable<any> {\n    this.ws = new WebSocket(url);\n    return new Observable(observer => {\n      this.ws.onmessage = event => observer.next(event.data);\n      this.ws.onerror = event => observer.error(event);\n      this.ws.onclose = event => observer.complete();\n      this.ws.onopen = event => {\n        openSubscriber.next();\n        openSubscriber.complete();\n      };\n\n      return () => this.ws.close();\n    });\n  }\n\n  send(message: any) {\n    this.ws.send(JSON.stringify(message));\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/websocket.ts"],"sourceRoot":""}